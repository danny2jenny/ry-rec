package com.rytec.rec.db.model;

import java.util.ArrayList;
import java.util.List;

public class PanoramaDeviceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public PanoramaDeviceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDeviceIsNull() {
            addCriterion("device is null");
            return (Criteria) this;
        }

        public Criteria andDeviceIsNotNull() {
            addCriterion("device is not null");
            return (Criteria) this;
        }

        public Criteria andDeviceEqualTo(Integer value) {
            addCriterion("device =", value, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceNotEqualTo(Integer value) {
            addCriterion("device <>", value, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceGreaterThan(Integer value) {
            addCriterion("device >", value, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceGreaterThanOrEqualTo(Integer value) {
            addCriterion("device >=", value, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceLessThan(Integer value) {
            addCriterion("device <", value, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceLessThanOrEqualTo(Integer value) {
            addCriterion("device <=", value, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceIn(List<Integer> values) {
            addCriterion("device in", values, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceNotIn(List<Integer> values) {
            addCriterion("device not in", values, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceBetween(Integer value1, Integer value2) {
            addCriterion("device between", value1, value2, "device");
            return (Criteria) this;
        }

        public Criteria andDeviceNotBetween(Integer value1, Integer value2) {
            addCriterion("device not between", value1, value2, "device");
            return (Criteria) this;
        }

        public Criteria andSceneIsNull() {
            addCriterion("scene is null");
            return (Criteria) this;
        }

        public Criteria andSceneIsNotNull() {
            addCriterion("scene is not null");
            return (Criteria) this;
        }

        public Criteria andSceneEqualTo(Integer value) {
            addCriterion("scene =", value, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneNotEqualTo(Integer value) {
            addCriterion("scene <>", value, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneGreaterThan(Integer value) {
            addCriterion("scene >", value, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneGreaterThanOrEqualTo(Integer value) {
            addCriterion("scene >=", value, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneLessThan(Integer value) {
            addCriterion("scene <", value, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneLessThanOrEqualTo(Integer value) {
            addCriterion("scene <=", value, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneIn(List<Integer> values) {
            addCriterion("scene in", values, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneNotIn(List<Integer> values) {
            addCriterion("scene not in", values, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneBetween(Integer value1, Integer value2) {
            addCriterion("scene between", value1, value2, "scene");
            return (Criteria) this;
        }

        public Criteria andSceneNotBetween(Integer value1, Integer value2) {
            addCriterion("scene not between", value1, value2, "scene");
            return (Criteria) this;
        }

        public Criteria andPitchIsNull() {
            addCriterion("pitch is null");
            return (Criteria) this;
        }

        public Criteria andPitchIsNotNull() {
            addCriterion("pitch is not null");
            return (Criteria) this;
        }

        public Criteria andPitchEqualTo(Float value) {
            addCriterion("pitch =", value, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchNotEqualTo(Float value) {
            addCriterion("pitch <>", value, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchGreaterThan(Float value) {
            addCriterion("pitch >", value, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchGreaterThanOrEqualTo(Float value) {
            addCriterion("pitch >=", value, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchLessThan(Float value) {
            addCriterion("pitch <", value, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchLessThanOrEqualTo(Float value) {
            addCriterion("pitch <=", value, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchIn(List<Float> values) {
            addCriterion("pitch in", values, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchNotIn(List<Float> values) {
            addCriterion("pitch not in", values, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchBetween(Float value1, Float value2) {
            addCriterion("pitch between", value1, value2, "pitch");
            return (Criteria) this;
        }

        public Criteria andPitchNotBetween(Float value1, Float value2) {
            addCriterion("pitch not between", value1, value2, "pitch");
            return (Criteria) this;
        }

        public Criteria andYawIsNull() {
            addCriterion("yaw is null");
            return (Criteria) this;
        }

        public Criteria andYawIsNotNull() {
            addCriterion("yaw is not null");
            return (Criteria) this;
        }

        public Criteria andYawEqualTo(Float value) {
            addCriterion("yaw =", value, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawNotEqualTo(Float value) {
            addCriterion("yaw <>", value, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawGreaterThan(Float value) {
            addCriterion("yaw >", value, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawGreaterThanOrEqualTo(Float value) {
            addCriterion("yaw >=", value, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawLessThan(Float value) {
            addCriterion("yaw <", value, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawLessThanOrEqualTo(Float value) {
            addCriterion("yaw <=", value, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawIn(List<Float> values) {
            addCriterion("yaw in", values, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawNotIn(List<Float> values) {
            addCriterion("yaw not in", values, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawBetween(Float value1, Float value2) {
            addCriterion("yaw between", value1, value2, "yaw");
            return (Criteria) this;
        }

        public Criteria andYawNotBetween(Float value1, Float value2) {
            addCriterion("yaw not between", value1, value2, "yaw");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table panoramadevice
     *
     * @mbggenerated do_not_delete_during_merge Wed May 10 09:18:04 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table panoramadevice
     *
     * @mbggenerated Wed May 10 09:18:04 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}